// Original component by Pandouby
// Adapted with permission for use in my portfolio
// Source: https://github.com/Pandouby/pandouby.github.io
// 
// NOTE: Color scheme has been moved to /src/theme/palette.ts
// Make sure to keep both files in sync when making changes
@use "sass:map";

// Using CSS variables defined in App.tsx that reference palette.ts
$themes: (
	light: (
		primaryColor: var(--theme-primaryColor),
		primaryShade: var(--theme-primaryShade),
		secondaryColor: var(--theme-secondaryColor),
		backgroundColor: var(--theme-backgroundColor),
		boxShadowColor: var(--theme-boxShadowColor),
		textColor: var(--theme-textColor),
		secondaryTextColor: var(--theme-secondaryTextColor),
		percentageColor: var(--theme-percentageColor),
		projectTitleColor: var(--theme-projectTitleColor),
		linkColor: var(--theme-linkColor),
        socialIconColor: var(--theme-socialIconColor),
	),
	dark: (
		primaryColor: var(--theme-primaryColor),
		primaryShade: var(--theme-primaryShade),
		secondaryColor: var(--theme-secondaryColor),
		backgroundColor: var(--theme-backgroundColor),
		boxShadowColor: var(--theme-boxShadowColor),
		textColor: var(--theme-textColor),
		secondaryTextColor: var(--theme-secondaryTextColor),
		percentageColor: var(--theme-percentageColor),
		projectTitleColor: var(--theme-projectTitleColor),
		linkColor: var(--theme-linkColor),
        socialIconColor: var(--theme-socialIconColor),
	),
);

@mixin themify($themes) {
	@each $theme, $map in $themes {
		.theme-#{$theme} & {
			$theme-map: () !global;
			@each $key, $submap in $map {
				$value: map.get(map.get($themes, $theme), "#{$key}");
				$theme-map: map.merge(
					$theme-map,
					(
						$key: $value,
					)
				) !global;
			}
			@content;
			$theme-map: null !global;
		}
	}
}

@function themed($key) {
	@return map.get($theme-map, $key)
}
